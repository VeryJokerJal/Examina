@{
    ViewData["Title"] = "API测试页面";
}

<div class="container-fluid">
    <div class="row">
        <div class="col-12">
            <div class="card">
                <div class="card-header">
                    <h3 class="card-title">考试管理API测试</h3>
                </div>
                <div class="card-body">
                    <div class="row">
                        <!-- 学生端API测试 -->
                        <div class="col-md-6">
                            <div class="card">
                                <div class="card-header">
                                    <h5 class="card-title">学生端API测试</h5>
                                </div>
                                <div class="card-body">
                                    <div class="mb-3">
                                        <button type="button" class="btn btn-primary" onclick="testGetProvincialExams()">
                                            获取全省统考列表
                                        </button>
                                    </div>
                                    <div class="mb-3">
                                        <button type="button" class="btn btn-primary" onclick="testGetSchoolExams()">
                                            获取学校统考列表
                                        </button>
                                    </div>
                                    <div class="mb-3">
                                        <button type="button" class="btn btn-info" onclick="testGetProvincialExamCount()">
                                            获取全省统考数量
                                        </button>
                                    </div>
                                    <div class="mb-3">
                                        <button type="button" class="btn btn-info" onclick="testGetSchoolExamCount()">
                                            获取学校统考数量
                                        </button>
                                    </div>
                                    <div id="studentApiResult" class="mt-3">
                                        <h6>测试结果：</h6>
                                        <pre id="studentApiOutput" class="bg-light p-3" style="max-height: 400px; overflow-y: auto;"></pre>
                                    </div>
                                </div>
                            </div>
                        </div>

                        <!-- 管理员API测试 -->
                        <div class="col-md-6">
                            <div class="card">
                                <div class="card-header">
                                    <h5 class="card-title">管理员API测试</h5>
                                </div>
                                <div class="card-body">
                                    <div class="mb-3">
                                        <label for="testExamId" class="form-label">测试考试ID：</label>
                                        <input type="number" id="testExamId" class="form-control" value="1" />
                                    </div>
                                    <div class="mb-3">
                                        <button type="button" class="btn btn-success" onclick="testSetExamSchedule()">
                                            设置考试时间
                                        </button>
                                    </div>
                                    <div class="mb-3">
                                        <button type="button" class="btn btn-warning" onclick="testUpdateExamStatus()">
                                            更新考试状态
                                        </button>
                                    </div>
                                    <div class="mb-3">
                                        <button type="button" class="btn btn-info" onclick="testUpdateExamCategory()">
                                            更新考试类型
                                        </button>
                                    </div>
                                    <div class="mb-3">
                                        <button type="button" class="btn btn-primary" onclick="testPublishExam()">
                                            发布考试
                                        </button>
                                    </div>
                                    <div id="adminApiResult" class="mt-3">
                                        <h6>测试结果：</h6>
                                        <pre id="adminApiOutput" class="bg-light p-3" style="max-height: 400px; overflow-y: auto;"></pre>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>

                    <!-- 数据种子 -->
                    <div class="row mt-4">
                        <div class="col-12">
                            <div class="card">
                                <div class="card-header">
                                    <h5 class="card-title">测试数据管理</h5>
                                </div>
                                <div class="card-body">
                                    <div class="alert alert-info">
                                        <strong>说明：</strong>如果没有测试数据，请先创建一些测试考试数据。
                                    </div>
                                    <button type="button" class="btn btn-secondary" onclick="createTestData()">
                                        创建测试数据
                                    </button>
                                    <div id="seedResult" class="mt-3"></div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        // 学生端API测试函数
        async function testGetProvincialExams() {
            try {
                const response = await fetch('/api/student/exams/category/1?pageNumber=1&pageSize=10');
                const data = await response.json();
                document.getElementById('studentApiOutput').textContent = 
                    `全省统考列表 (${response.status}):\n` + JSON.stringify(data, null, 2);
            } catch (error) {
                document.getElementById('studentApiOutput').textContent = 
                    `错误: ${error.message}`;
            }
        }

        async function testGetSchoolExams() {
            try {
                const response = await fetch('/api/student/exams/category/0?pageNumber=1&pageSize=10');
                const data = await response.json();
                document.getElementById('studentApiOutput').textContent = 
                    `学校统考列表 (${response.status}):\n` + JSON.stringify(data, null, 2);
            } catch (error) {
                document.getElementById('studentApiOutput').textContent = 
                    `错误: ${error.message}`;
            }
        }

        async function testGetProvincialExamCount() {
            try {
                const response = await fetch('/api/student/exams/category/1/count');
                const data = await response.json();
                document.getElementById('studentApiOutput').textContent = 
                    `全省统考数量 (${response.status}):\n` + JSON.stringify(data, null, 2);
            } catch (error) {
                document.getElementById('studentApiOutput').textContent = 
                    `错误: ${error.message}`;
            }
        }

        async function testGetSchoolExamCount() {
            try {
                const response = await fetch('/api/student/exams/category/0/count');
                const data = await response.json();
                document.getElementById('studentApiOutput').textContent = 
                    `学校统考数量 (${response.status}):\n` + JSON.stringify(data, null, 2);
            } catch (error) {
                document.getElementById('studentApiOutput').textContent = 
                    `错误: ${error.message}`;
            }
        }

        // 管理员API测试函数
        async function testSetExamSchedule() {
            const examId = document.getElementById('testExamId').value;
            const now = new Date();
            const startTime = new Date(now.getTime() + 24 * 60 * 60 * 1000); // 明天
            const endTime = new Date(startTime.getTime() + 2 * 60 * 60 * 1000); // 开始后2小时

            try {
                const response = await fetch(`/api/admin/exam-management/${examId}/schedule`, {
                    method: 'PUT',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify({
                        startTime: startTime.toISOString(),
                        endTime: endTime.toISOString()
                    })
                });
                const data = await response.json();
                document.getElementById('adminApiOutput').textContent = 
                    `设置考试时间 (${response.status}):\n` + JSON.stringify(data, null, 2);
            } catch (error) {
                document.getElementById('adminApiOutput').textContent = 
                    `错误: ${error.message}`;
            }
        }

        async function testUpdateExamStatus() {
            const examId = document.getElementById('testExamId').value;
            
            try {
                const response = await fetch(`/api/admin/exam-management/${examId}/status`, {
                    method: 'PUT',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify({
                        status: 'Published'
                    })
                });
                const data = await response.json();
                document.getElementById('adminApiOutput').textContent = 
                    `更新考试状态 (${response.status}):\n` + JSON.stringify(data, null, 2);
            } catch (error) {
                document.getElementById('adminApiOutput').textContent = 
                    `错误: ${error.message}`;
            }
        }

        async function testUpdateExamCategory() {
            const examId = document.getElementById('testExamId').value;
            
            try {
                const response = await fetch(`/api/admin/exam-management/${examId}/category`, {
                    method: 'PUT',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify({
                        category: 1 // Provincial
                    })
                });
                const data = await response.json();
                document.getElementById('adminApiOutput').textContent = 
                    `更新考试类型 (${response.status}):\n` + JSON.stringify(data, null, 2);
            } catch (error) {
                document.getElementById('adminApiOutput').textContent = 
                    `错误: ${error.message}`;
            }
        }

        async function testPublishExam() {
            const examId = document.getElementById('testExamId').value;
            
            try {
                const response = await fetch(`/api/admin/exam-management/${examId}/publish`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    }
                });
                const data = await response.json();
                document.getElementById('adminApiOutput').textContent = 
                    `发布考试 (${response.status}):\n` + JSON.stringify(data, null, 2);
            } catch (error) {
                document.getElementById('adminApiOutput').textContent = 
                    `错误: ${error.message}`;
            }
        }

        // 创建测试数据
        async function createTestData() {
            try {
                const response = await fetch('/ExamManagement/CreateTestData', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    }
                });
                const result = await response.text();
                document.getElementById('seedResult').innerHTML = 
                    `<div class="alert alert-success">测试数据创建完成！请刷新页面查看。</div>`;
            } catch (error) {
                document.getElementById('seedResult').innerHTML = 
                    `<div class="alert alert-danger">创建测试数据失败: ${error.message}</div>`;
            }
        }
    </script>
}
