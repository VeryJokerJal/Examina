@model TeacherOrganizationDetailsViewModel
@using ExaminaWebApplication.ViewModels
@using ExaminaWebApplication.Models.Organization
@using ExaminaWebApplication.Models.Organization.Dto
@{
    ViewData["Title"] = $"组织详情 - {Model.Organization.Name}";
    Layout = "_Layout";
}

<!-- 页面标题 -->
<div class="d-flex justify-content-between align-items-center mb-4">
    <div>
        <h2>
            <i class="bi bi-mortarboard me-2"></i>
            @Model.Organization.Name
        </h2>
        <p class="text-muted mb-0">
            <span class="badge bg-success me-2">学校组织</span>
            您于 @Model.Members.FirstOrDefault(m => m.StudentUsername == User.Identity.Name)?.JoinedAt.ToString("yyyy年MM月dd日") 加入
        </p>
    </div>
    <div>
        <button type="button" class="glass-btn glass-btn-danger me-2" 
                onclick="leaveOrganization(@Model.Organization.Id, '@Model.Organization.Name')">
            <i class="bi bi-box-arrow-right me-2"></i>退出组织
        </button>
        <a href="/Teacher/Organization" class="glass-btn">
            <i class="bi bi-arrow-left me-2"></i>返回首页
        </a>
    </div>
</div>

<!-- 成功/错误消息 -->
@if (TempData["SuccessMessage"] != null)
{
    <div class="alert alert-success glass-alert-success alert-dismissible fade show" role="alert">
        <i class="bi bi-check-circle me-2"></i>@TempData["SuccessMessage"]
        <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
    </div>
}

@if (TempData["ErrorMessage"] != null)
{
    <div class="alert alert-danger glass-alert-danger alert-dismissible fade show" role="alert">
        <i class="bi bi-exclamation-triangle me-2"></i>@TempData["ErrorMessage"]
        <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
    </div>
}

<!-- 组织信息概览 -->
<div class="row mb-4">
    <div class="col-md-8">
        <div class="glass-card">
            <div class="card-header">
                <h5 class="mb-0">
                    <i class="bi bi-info-circle me-2"></i>组织信息
                </h5>
            </div>
            <div class="card-body">
                <div class="row">
                    <div class="col-md-6">
                        <dl class="row">
                            <dt class="col-sm-4">组织名称：</dt>
                            <dd class="col-sm-8">@Model.Organization.Name</dd>
                            
                            <dt class="col-sm-4">组织类型：</dt>
                            <dd class="col-sm-8">
                                <span class="badge bg-success">学校组织</span>
                            </dd>
                            
                            <dt class="col-sm-4">创建者：</dt>
                            <dd class="col-sm-8">@Model.Organization.CreatorUsername</dd>
                        </dl>
                    </div>
                    <div class="col-md-6">
                        <dl class="row">
                            <dt class="col-sm-4">创建时间：</dt>
                            <dd class="col-sm-8">@Model.Organization.CreatedAt.ToString("yyyy-MM-dd HH:mm")</dd>
                            
                            <dt class="col-sm-4">成员数量：</dt>
                            <dd class="col-sm-8">
                                <span class="badge bg-primary">@Model.Members.Count</span>
                            </dd>
                            
                            <dt class="col-sm-4">您的状态：</dt>
                            <dd class="col-sm-8">
                                <span class="badge bg-success">
                                    <i class="bi bi-check-circle me-1"></i>已加入
                                </span>
                            </dd>
                        </dl>
                    </div>
                </div>
                
                @if (!string.IsNullOrEmpty(Model.Organization.Description))
                {
                    <hr>
                    <div>
                        <strong>组织描述：</strong>
                        <p class="mt-2 mb-0">@Model.Organization.Description</p>
                    </div>
                }
            </div>
        </div>
    </div>
    
    <!-- 统计信息 -->
    <div class="col-md-4">
        <div class="glass-card">
            <div class="card-header">
                <h6 class="mb-0">
                    <i class="bi bi-graph-up me-2"></i>统计信息
                </h6>
            </div>
            <div class="card-body">
                <div class="text-center mb-3">
                    <i class="bi bi-people text-primary" style="font-size: 2rem;"></i>
                    <h4 class="mt-2 mb-0">@Model.Members.Count</h4>
                    <small class="text-muted">总成员数</small>
                </div>
                
                <div class="text-center mb-3">
                    <i class="bi bi-person-check text-success" style="font-size: 2rem;"></i>
                    <h4 class="mt-2 mb-0">@Model.Members.Count(m => m.IsActive)</h4>
                    <small class="text-muted">活跃成员</small>
                </div>
                
                <div class="text-center">
                    <i class="bi bi-calendar-plus text-info" style="font-size: 2rem;"></i>
                    <h4 class="mt-2 mb-0">
                        @(Model.Members.Any() ? Model.Members.Max(m => m.JoinedAt).ToString("MM-dd") : "-")
                    </h4>
                    <small class="text-muted">最新加入</small>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- 成员列表 -->
<div class="glass-card">
    <div class="card-header">
        <h5 class="mb-0">
            <i class="bi bi-people me-2"></i>成员列表
        </h5>
    </div>
    <div class="card-body">
        @if (Model.Members.Any())
        {
            <div class="table-responsive">
                <table class="table table-hover">
                    <thead>
                        <tr>
                            <th>用户名</th>
                            <th>真实姓名</th>
                            <th>学号/工号</th>
                            <th>加入时间</th>
                            <th>状态</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var member in Model.Members.OrderByDescending(m => m.JoinedAt))
                        {
                            <tr class="@(member.StudentUsername == User.Identity.Name ? "table-primary" : "")">
                                <td>
                                    <div class="d-flex align-items-center">
                                        <i class="bi bi-person me-2"></i>
                                        @member.StudentUsername
                                        @if (member.StudentUsername == User.Identity.Name)
                                        {
                                            <span class="badge bg-primary ms-2">您</span>
                                        }
                                    </div>
                                </td>
                                <td>@(member.StudentRealName ?? "-")</td>
                                <td>@(member.StudentId_Number ?? "-")</td>
                                <td>
                                    <small>@member.JoinedAt.ToString("yyyy-MM-dd HH:mm")</small>
                                </td>
                                <td>
                                    @if (member.IsActive)
                                    {
                                        <span class="badge bg-success">
                                            <i class="bi bi-check-circle me-1"></i>活跃
                                        </span>
                                    }
                                    else
                                    {
                                        <span class="badge bg-secondary">
                                            <i class="bi bi-x-circle me-1"></i>已退出
                                        </span>
                                    }
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        }
        else
        {
            <div class="text-center py-4">
                <i class="bi bi-people text-muted" style="font-size: 3rem;"></i>
                <h6 class="text-muted mt-3">暂无成员</h6>
                <p class="text-muted">组织还没有其他成员</p>
            </div>
        }
    </div>
</div>

@section Scripts {
    <script>
        // 退出组织
        async function leaveOrganization(organizationId, organizationName) {
            if (confirm(`确定要退出组织"${organizationName}"吗？\n\n退出后您将无法访问该组织的相关功能，需要重新使用邀请码加入。`)) {
                try {
                    const response = await fetch(`/Teacher/Organization/Leave/${organizationId}`, {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json',
                            'RequestVerificationToken': document.querySelector('input[name="__RequestVerificationToken"]')?.value || ''
                        }
                    });

                    if (response.ok) {
                        showNotification('已成功退出组织', 'success');
                        setTimeout(() => {
                            window.location.href = '/Teacher/Organization';
                        }, 1000);
                    } else {
                        showNotification('退出失败，请稍后重试', 'danger');
                    }
                } catch (error) {
                    console.error('退出组织失败:', error);
                    showNotification('退出失败，请稍后重试', 'danger');
                }
            }
        }

        // 页面加载完成后的初始化
        document.addEventListener('DOMContentLoaded', function() {
            // 自动隐藏成功/错误消息
            setTimeout(() => {
                const alerts = document.querySelectorAll('.alert');
                alerts.forEach(alert => {
                    if (alert.classList.contains('show')) {
                        alert.classList.remove('show');
                    }
                });
            }, 5000);
        });
    </script>
}

@Html.AntiForgeryToken()

<style>
    .glass-alert-success {
        background: rgba(25, 135, 84, 0.1);
        border: 1px solid rgba(25, 135, 84, 0.2);
        color: var(--text-primary);
    }

    .glass-alert-danger {
        background: rgba(220, 53, 69, 0.1);
        border: 1px solid rgba(220, 53, 69, 0.2);
        color: var(--text-primary);
    }

    .table th {
        border-color: var(--glass-border);
        background: var(--glass-secondary);
        color: var(--text-primary);
    }

    .table td {
        border-color: var(--glass-border);
        color: var(--text-primary);
    }

    .table-hover tbody tr:hover {
        background: var(--glass-secondary);
    }

    .table-primary {
        background: rgba(13, 110, 253, 0.1);
    }

    .table-primary:hover {
        background: rgba(13, 110, 253, 0.15) !important;
    }

    dl dt {
        color: var(--text-secondary);
    }

    dl dd {
        color: var(--text-primary);
    }

    .glass-btn-danger {
        background: rgba(220, 53, 69, 0.1);
        border: 1px solid rgba(220, 53, 69, 0.3);
        color: #dc3545;
    }

    .glass-btn-danger:hover {
        background: rgba(220, 53, 69, 0.2);
        border-color: #dc3545;
        color: #dc3545;
    }
</style>
