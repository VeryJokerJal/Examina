@model ExaminaWebApplication.Models.ImportedSpecializedTraining.ImportedSpecializedTraining
@{
    ViewData["Title"] = $"专项训练详情 - {Model.Name}";
}

<!-- 页面标题横幅 -->
<div class="glass-card glass-card-primary py-4 mb-4">
    <div class="container">
        <div class="row align-items-center">
            <div class="col-md-8">
                <h1 class="display-6 fw-bold mb-2">
                    <i class="bi bi-target me-3"></i>@Model.Name
                </h1>
                <p class="lead mb-0">专项训练详细信息</p>
            </div>
            <div class="col-md-4 text-end">
                <a asp-action="SpecializedTraining" class="glass-btn me-2">
                    <i class="bi bi-arrow-left me-1"></i>返回列表
                </a>
                <button type="button" class="glass-btn glass-btn-danger" 
                        onclick="deleteSpecializedTraining(@Model.Id, '@Model.Name')">
                    <i class="bi bi-trash me-1"></i>删除
                </button>
            </div>
        </div>
    </div>
</div>

<!-- 主要内容区域 -->
<div class="container">
    <!-- 基本信息 -->
    <div class="row mb-4">
        <div class="col-lg-8">
            <div class="glass-card">
                <div class="card-header">
                    <h5 class="card-title mb-0">
                        <i class="bi bi-info-circle me-2"></i>基本信息
                    </h5>
                </div>
                <div class="card-body">
                    <div class="row">
                        <div class="col-md-6">
                            <dl class="row">
                                <dt class="col-sm-4">训练名称:</dt>
                                <dd class="col-sm-8">@Model.Name</dd>
                                
                                <dt class="col-sm-4">模块类型:</dt>
                                <dd class="col-sm-8">
                                    <span class="badge bg-info">@Model.ModuleType</span>
                                </dd>
                                
                                <dt class="col-sm-4">难度等级:</dt>
                                <dd class="col-sm-8">
                                    <div class="d-flex align-items-center">
                                        @for (int i = 1; i <= 5; i++)
                                        {
                                            <i class="bi bi-star@(i <= Model.DifficultyLevel ? "-fill text-warning" : " text-muted") me-1"></i>
                                        }
                                        <span class="ms-2">(@Model.DifficultyLevel/5)</span>
                                    </div>
                                </dd>
                                
                                <dt class="col-sm-4">总分:</dt>
                                <dd class="col-sm-8">@Model.TotalScore 分</dd>
                                
                                <dt class="col-sm-4">时长:</dt>
                                <dd class="col-sm-8">@Model.Duration 分钟</dd>
                            </dl>
                        </div>
                        <div class="col-md-6">
                            <dl class="row">
                                <dt class="col-sm-4">状态:</dt>
                                <dd class="col-sm-8">
                                    @if (Model.IsEnabled)
                                    {
                                        <span class="badge bg-success">启用</span>
                                    }
                                    else
                                    {
                                        <span class="badge bg-secondary">禁用</span>
                                    }
                                </dd>
                                
                                <dt class="col-sm-4">随机题目:</dt>
                                <dd class="col-sm-8">
                                    @if (Model.RandomizeQuestions)
                                    {
                                        <span class="badge bg-warning">是</span>
                                    }
                                    else
                                    {
                                        <span class="badge bg-secondary">否</span>
                                    }
                                </dd>
                                
                                <dt class="col-sm-4">导入时间:</dt>
                                <dd class="col-sm-8">@Model.ImportedAt.ToString("yyyy-MM-dd HH:mm:ss")</dd>
                                
                                <dt class="col-sm-4">原始ID:</dt>
                                <dd class="col-sm-8">
                                    <code>@Model.OriginalSpecializedTrainingId</code>
                                </dd>
                                
                                <dt class="col-sm-4">导入版本:</dt>
                                <dd class="col-sm-8">@Model.ImportVersion</dd>
                            </dl>
                        </div>
                    </div>
                    
                    @if (!string.IsNullOrEmpty(Model.Description))
                    {
                        <hr>
                        <h6>描述:</h6>
                        <p class="text-muted">@Model.Description</p>
                    }
                    
                    @if (!string.IsNullOrEmpty(Model.Tags))
                    {
                        <hr>
                        <h6>标签:</h6>
                        <div>
                            @foreach (var tag in Model.Tags.Split(',', StringSplitOptions.RemoveEmptyEntries))
                            {
                                <span class="badge bg-light text-dark me-1">#@tag.Trim()</span>
                            }
                        </div>
                    }
                </div>
            </div>
        </div>
        
        <div class="col-lg-4">
            <div class="glass-card">
                <div class="card-header">
                    <h5 class="card-title mb-0">
                        <i class="bi bi-bar-chart me-2"></i>统计信息
                    </h5>
                </div>
                <div class="card-body">
                    <div class="text-center mb-3">
                        <i class="bi bi-puzzle display-4 text-primary mb-2"></i>
                        <h3 class="fw-bold">@Model.Modules.Count</h3>
                        <p class="text-muted mb-0">模块数量</p>
                    </div>
                    
                    <div class="text-center mb-3">
                        <i class="bi bi-question-circle display-4 text-success mb-2"></i>
                        <h3 class="fw-bold">@Model.Questions.Count</h3>
                        <p class="text-muted mb-0">题目数量</p>
                    </div>
                    
                    <div class="text-center">
                        <i class="bi bi-gear display-4 text-warning mb-2"></i>
                        <h3 class="fw-bold">@Model.Questions.Sum(q => q.OperationPoints.Count)</h3>
                        <p class="text-muted mb-0">操作点数量</p>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- 模块列表 -->
    <div class="glass-card mb-4">
        <div class="card-header">
            <h5 class="card-title mb-0">
                <i class="bi bi-puzzle me-2"></i>模块列表
            </h5>
        </div>
        <div class="card-body">
            @if (Model.Modules.Any())
            {
                <div class="row">
                    @foreach (var module in Model.Modules.OrderBy(m => m.Order))
                    {
                        <div class="col-md-6 mb-3">
                            <div class="card h-100">
                                <div class="card-body">
                                    <h6 class="card-title">
                                        <i class="bi bi-puzzle-fill text-primary me-2"></i>@module.Name
                                    </h6>
                                    <p class="card-text text-muted">@module.Description</p>
                                    <div class="d-flex justify-content-between align-items-center">
                                        <small class="text-muted">
                                            <i class="bi bi-question-circle me-1"></i>@module.Questions.Count 题目
                                        </small>
                                        <span class="badge bg-secondary">@module.Score 分</span>
                                    </div>
                                </div>
                            </div>
                        </div>
                    }
                </div>
            }
            else
            {
                <p class="text-muted text-center">暂无模块数据</p>
            }
        </div>
    </div>

    <!-- 题目列表 -->
    <div class="glass-card">
        <div class="card-header d-flex justify-content-between align-items-center">
            <h5 class="card-title mb-0">
                <i class="bi bi-question-circle me-2"></i>题目列表
            </h5>
            <div>
                <input type="text" class="form-control form-control-sm" placeholder="搜索题目..." id="searchQuestions" style="width: 200px;">
            </div>
        </div>
        <div class="card-body">
            @if (Model.Questions.Any())
            {
                <div class="accordion" id="questionsAccordion">
                    @foreach (var question in Model.Questions.OrderBy(q => q.Order))
                    {
                        <div class="accordion-item question-item" data-title="@question.Title.ToLower()">
                            <h2 class="accordion-header">
                                <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse" 
                                        data-bs-target="#question-@question.Id">
                                    <div class="d-flex justify-content-between align-items-center w-100 me-3">
                                        <div>
                                            <strong>@question.Title</strong>
                                            <small class="text-muted ms-2">(@question.Score 分)</small>
                                        </div>
                                        <div>
                                            <span class="badge bg-secondary">@question.OperationPoints.Count 操作点</span>
                                        </div>
                                    </div>
                                </button>
                            </h2>
                            <div id="question-@question.Id" class="accordion-collapse collapse">
                                <div class="accordion-body">
                                    <div class="row">
                                        <div class="col-md-8">
                                            <h6>题目内容:</h6>
                                            <p class="text-muted">@question.Content</p>
                                            
                                            @if (!string.IsNullOrEmpty(question.StandardAnswer))
                                            {
                                                <h6>标准答案:</h6>
                                                <div class="alert alert-light">
                                                    <pre>@question.StandardAnswer</pre>
                                                </div>
                                            }
                                        </div>
                                        <div class="col-md-4">
                                            <dl class="row">
                                                <dt class="col-6">必答题:</dt>
                                                <dd class="col-6">
                                                    @if (question.IsRequired)
                                                    {
                                                        <span class="badge bg-danger">是</span>
                                                    }
                                                    else
                                                    {
                                                        <span class="badge bg-secondary">否</span>
                                                    }
                                                </dd>
                                                
                                                <dt class="col-6">状态:</dt>
                                                <dd class="col-6">
                                                    @if (question.IsEnabled)
                                                    {
                                                        <span class="badge bg-success">启用</span>
                                                    }
                                                    else
                                                    {
                                                        <span class="badge bg-secondary">禁用</span>
                                                    }
                                                </dd>
                                            </dl>
                                        </div>
                                    </div>
                                    
                                    @if (question.OperationPoints.Any())
                                    {
                                        <hr>
                                        <h6>操作点列表:</h6>
                                        <div class="table-responsive">
                                            <table class="table table-sm">
                                                <thead>
                                                    <tr>
                                                        <th>名称</th>
                                                        <th>描述</th>
                                                        <th>分值</th>
                                                        <th>参数数量</th>
                                                    </tr>
                                                </thead>
                                                <tbody>
                                                    @foreach (var op in question.OperationPoints.OrderBy(op => op.Order))
                                                    {
                                                        <tr>
                                                            <td>@op.Name</td>
                                                            <td>@op.Description</td>
                                                            <td>@op.Score</td>
                                                            <td>@op.Parameters.Count</td>
                                                        </tr>
                                                    }
                                                </tbody>
                                            </table>
                                        </div>
                                    }
                                </div>
                            </div>
                        </div>
                    }
                </div>
            }
            else
            {
                <p class="text-muted text-center">暂无题目数据</p>
            }
        </div>
    </div>

    <!-- 文件管理 -->
    <div class="row mb-4">
        <div class="col-12">
            <div class="glass-card">
                <div class="card-header">
                    <h5 class="card-title mb-0">
                        <i class="bi bi-files me-2"></i>文件管理
                    </h5>
                </div>
                <div class="card-body">
                    <!-- 文件上传组件 -->
                    @{
                        ViewData["ContainerId"] = "specialized-training-file-upload";
                        ViewData["Multiple"] = true;
                        ViewData["AutoUpload"] = false;
                    }
                    @await Html.PartialAsync("_FileUpload")

                    <!-- 已关联的文件列表 -->
                    <div id="associated-files-section" style="margin-top: 30px;">
                        <h6><i class="bi bi-link-45deg me-2"></i>已关联的文件</h6>
                        <div id="associated-files-list">
                            <div class="text-center text-muted py-3">
                                <i class="bi bi-inbox display-4 mb-2"></i>
                                <p>暂无关联文件</p>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- 删除确认模态框 -->
<div class="modal fade" id="deleteModal" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">确认删除</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body">
                <p>确定要删除专项训练 "<span id="deleteTrainingName"></span>" 吗？</p>
                <p class="text-danger"><i class="bi bi-exclamation-triangle me-1"></i>此操作不可撤销！</p>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">取消</button>
                <button type="button" class="btn btn-danger" id="confirmDeleteBtn">确认删除</button>
            </div>
        </div>
    </div>
</div>

<script>
// 文件上传完成后的回调
window.onFilesUploaded = function(uploadedFiles, failedFiles) {
    // 自动关联上传的文件到当前专项训练
    uploadedFiles.forEach(file => {
        associateFileToSpecializedTraining(file.fileId, 'Attachment');
    });

    // 刷新已关联文件列表
    loadAssociatedFiles();
};

// 关联文件到专项训练
function associateFileToSpecializedTraining(fileId, fileType = 'Attachment', purpose = '') {
    const formData = new FormData();
    formData.append('fileType', fileType);
    if (purpose) {
        formData.append('purpose', purpose);
    }

    fetch(`/api/fileupload/associate/specialized-training/@Model.Id/file/${fileId}`, {
        method: 'POST',
        body: formData
    })
    .then(response => response.json())
    .then(result => {
        if (result.success) {
            console.log('文件关联成功');
        } else {
            console.error('文件关联失败:', result.message);
        }
    })
    .catch(error => {
        console.error('文件关联过程中发生错误:', error);
    });
}

// 加载已关联的文件列表
function loadAssociatedFiles() {
    fetch(`/api/fileupload/specialized-training/@Model.Id/files`)
        .then(response => response.json())
        .then(result => {
            if (result.success) {
                displayAssociatedFiles(result.data);
            } else {
                console.error('加载文件列表失败:', result.message);
            }
        })
        .catch(error => {
            console.error('加载文件列表过程中发生错误:', error);
        });
}

// 显示已关联的文件列表
function displayAssociatedFiles(files) {
    const container = document.getElementById('associated-files-list');

    if (files.length === 0) {
        container.innerHTML = `
            <div class="text-center text-muted py-3">
                <i class="bi bi-inbox display-4 mb-2"></i>
                <p>暂无关联文件</p>
            </div>
        `;
        return;
    }

    const filesHtml = files.map(file => `
        <div class="file-item d-flex justify-content-between align-items-center p-3 border rounded mb-2">
            <div class="file-info d-flex align-items-center">
                <i class="bi ${getFileIcon(file.originalFileName)} me-3 text-primary" style="font-size: 1.5rem;"></i>
                <div>
                    <div class="fw-medium">${file.originalFileName}</div>
                    <small class="text-muted">${formatFileSize(file.fileSize)} • ${new Date(file.uploadedAt).toLocaleString()}</small>
                </div>
            </div>
            <div class="file-actions">
                <a href="${file.downloadUrl}" class="btn btn-sm btn-outline-primary me-2" download>
                    <i class="bi bi-download"></i> 下载
                </a>
                <button type="button" class="btn btn-sm btn-outline-danger" onclick="removeFileAssociation(${file.fileId})">
                    <i class="bi bi-unlink"></i> 取消关联
                </button>
            </div>
        </div>
    `).join('');

    container.innerHTML = filesHtml;
}

// 取消文件关联
function removeFileAssociation(fileId) {
    if (!confirm('确定要取消此文件的关联吗？')) {
        return;
    }

    fetch(`/api/fileupload/${fileId}`, {
        method: 'DELETE'
    })
    .then(response => response.json())
    .then(result => {
        if (result.success) {
            loadAssociatedFiles();
            alert('文件关联已取消');
        } else {
            alert('取消关联失败: ' + result.message);
        }
    })
    .catch(error => {
        alert('取消关联过程中发生错误: ' + error.message);
    });
}

// 获取文件图标
function getFileIcon(fileName) {
    const extension = fileName.split('.').pop().toLowerCase();
    const iconMap = {
        'pdf': 'bi-file-earmark-pdf',
        'doc': 'bi-file-earmark-word',
        'docx': 'bi-file-earmark-word',
        'xls': 'bi-file-earmark-excel',
        'xlsx': 'bi-file-earmark-excel',
        'ppt': 'bi-file-earmark-ppt',
        'pptx': 'bi-file-earmark-ppt',
        'zip': 'bi-file-earmark-zip',
        'rar': 'bi-file-earmark-zip',
        '7z': 'bi-file-earmark-zip',
        'jpg': 'bi-file-earmark-image',
        'jpeg': 'bi-file-earmark-image',
        'png': 'bi-file-earmark-image',
        'gif': 'bi-file-earmark-image',
        'bmp': 'bi-file-earmark-image',
        'mp4': 'bi-file-earmark-play',
        'avi': 'bi-file-earmark-play',
        'mov': 'bi-file-earmark-play',
        'wmv': 'bi-file-earmark-play',
        'mp3': 'bi-file-earmark-music',
        'wav': 'bi-file-earmark-music',
        'wma': 'bi-file-earmark-music',
        'txt': 'bi-file-earmark-text',
        'rtf': 'bi-file-earmark-text',
        'json': 'bi-file-earmark-code',
        'xml': 'bi-file-earmark-code'
    };
    return iconMap[extension] || 'bi-file-earmark';
}

// 格式化文件大小
function formatFileSize(bytes) {
    if (bytes === 0) return '0 Bytes';
    const k = 1024;
    const sizes = ['Bytes', 'KB', 'MB', 'GB'];
    const i = Math.floor(Math.log(bytes) / Math.log(k));
    return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i];
}

document.addEventListener('DOMContentLoaded', function() {
    // 页面加载完成后加载已关联的文件
    loadAssociatedFiles();
    const searchInput = document.getElementById('searchQuestions');
    
    // 题目搜索功能
    searchInput.addEventListener('input', function() {
        const searchTerm = this.value.toLowerCase();
        const questionItems = document.querySelectorAll('.question-item');
        
        questionItems.forEach(item => {
            const title = item.getAttribute('data-title');
            item.style.display = title.includes(searchTerm) ? '' : 'none';
        });
    });
});

let deleteTrainingId = null;

function deleteSpecializedTraining(id, name) {
    deleteTrainingId = id;
    document.getElementById('deleteTrainingName').textContent = name;
    new bootstrap.Modal(document.getElementById('deleteModal')).show();
}

document.getElementById('confirmDeleteBtn').addEventListener('click', function() {
    if (deleteTrainingId) {
        fetch('@Url.Action("DeleteSpecializedTraining")', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/x-www-form-urlencoded'
            },
            body: `id=${deleteTrainingId}`
        })
        .then(response => response.json())
        .then(data => {
            if (data.success) {
                window.location.href = '@Url.Action("SpecializedTraining")';
            } else {
                alert('删除失败：' + data.message);
            }
        })
        .catch(error => {
            console.error('Error:', error);
            alert('删除失败，请稍后重试');
        });
        
        bootstrap.Modal.getInstance(document.getElementById('deleteModal')).hide();
    }
});
</script>
