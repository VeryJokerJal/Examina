@model List<ExaminaWebApplication.Models.ImportedSpecializedTraining.ImportedSpecializedTraining>
@{
    ViewData["Title"] = "专项训练管理";
}

<style>
    /* 专项训练列表页面的额外玻璃拟态样式优化 */
    .specialized-training-page .glass-table tbody tr {
        transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
    }

    .specialized-training-page .glass-table tbody tr:hover {
        background: linear-gradient(135deg,
            rgba(255, 255, 255, 0.15) 0%,
            rgba(255, 255, 255, 0.08) 100%);
        transform: translateY(-2px);
        box-shadow: 0 8px 25px rgba(0, 0, 0, 0.15);
    }

    .specialized-training-page .badge {
        backdrop-filter: blur(10px);
        -webkit-backdrop-filter: blur(10px);
        border: 1px solid rgba(255, 255, 255, 0.2);
        font-weight: 500;
        transition: all 0.3s ease;
    }

    .specialized-training-page .badge:hover {
        transform: scale(1.05);
        box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);
    }

    .specialized-training-page .glass-form-control {
        transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
    }

    .specialized-training-page .glass-form-control:focus {
        transform: translateY(-1px);
        box-shadow: 0 8px 25px rgba(102, 126, 234, 0.25);
    }





    /* 表格头部的增强效果 */
    .specialized-training-page .glass-table thead th {
        position: relative;
        overflow: hidden;
    }

    .specialized-training-page .glass-table thead th::before {
        content: '';
        position: absolute;
        top: 0;
        left: -100%;
        width: 100%;
        height: 100%;
        background: linear-gradient(90deg,
            transparent,
            rgba(255, 255, 255, 0.2),
            transparent);
        transition: left 0.5s ease;
    }

    .specialized-training-page .glass-table thead th:hover::before {
        left: 100%;
    }
</style>

<!-- 页面标题横幅 -->
<div class="glass-card glass-card-primary py-4 mb-4">
    <div class="container">
        <div class="row align-items-center">
            <div class="col-md-8">
                <h1 class="display-6 fw-bold mb-2">
                    <i class="bi bi-target me-3"></i>专项训练管理
                </h1>
                <p class="lead mb-0">管理从 ExamLab 导入的专项训练数据</p>
            </div>
            <div class="col-md-4 text-end">
                <a asp-action="ImportSpecializedTraining" class="glass-btn glass-btn-primary me-2">
                    <i class="bi bi-upload me-1"></i>导入训练
                </a>
                <a asp-action="Index" class="glass-btn">
                    <i class="bi bi-speedometer2 me-1"></i>管理面板
                </a>
            </div>
        </div>
    </div>
</div>

<!-- 主要内容区域 -->
<div class="container specialized-training-page">
    <!-- 显示消息 -->
    @if (TempData["SuccessMessage"] != null)
    {
        <div class="alert alert-success alert-dismissible fade show" role="alert">
            <i class="bi bi-check-circle me-2"></i>@TempData["SuccessMessage"]
            <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
        </div>
    }

    @if (TempData["ErrorMessage"] != null)
    {
        <div class="alert alert-danger alert-dismissible fade show" role="alert">
            <i class="bi bi-exclamation-triangle me-2"></i>@TempData["ErrorMessage"]
            <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
        </div>
    }

    <!-- 统计信息 -->
    <div class="row mb-4">
        <div class="col-md-3">
            <div class="glass-card text-center">
                <div class="card-body">
                    <i class="bi bi-collection display-4 text-primary mb-2"></i>
                    <h3 class="fw-bold">@Model.Count</h3>
                    <p class="text-muted mb-0">专项训练总数</p>
                </div>
            </div>
        </div>
        <div class="col-md-3">
            <div class="glass-card text-center">
                <div class="card-body">
                    <i class="bi bi-puzzle display-4 text-success mb-2"></i>
                    <h3 class="fw-bold">@Model.Sum(t => t.Modules.Count)</h3>
                    <p class="text-muted mb-0">模块总数</p>
                </div>
            </div>
        </div>
        <div class="col-md-3">
            <div class="glass-card text-center">
                <div class="card-body">
                    <i class="bi bi-question-circle display-4 text-warning mb-2"></i>
                    <h3 class="fw-bold">@Model.Sum(t => t.Questions.Count)</h3>
                    <p class="text-muted mb-0">题目总数</p>
                </div>
            </div>
        </div>
        <div class="col-md-3">
            <div class="glass-card text-center">
                <div class="card-body">
                    <i class="bi bi-check-circle display-4 text-info mb-2"></i>
                    <h3 class="fw-bold">@Model.Count(t => t.IsEnabled)</h3>
                    <p class="text-muted mb-0">启用的训练</p>
                </div>
            </div>
        </div>
    </div>

    <!-- 专项训练列表 -->
    <div class="glass-card">
        <div class="card-header d-flex justify-content-between align-items-center">
            <h5 class="card-title mb-0">
                <i class="bi bi-list-ul me-2"></i>专项训练列表
            </h5>
            <div class="d-flex gap-2">
                <input type="text" class="glass-form-control glass-form-control-sm" placeholder="搜索训练..." id="searchInput" style="width: 200px;">
                <select class="glass-form-control glass-form-control-sm" id="moduleTypeFilter" style="width: 150px;">
                    <option value="">所有模块类型</option>
                    <option value="Windows">Windows</option>
                    <option value="Excel">Excel</option>
                    <option value="PowerPoint">PowerPoint</option>
                    <option value="Word">Word</option>
                    <option value="CSharp">C#</option>
                </select>
            </div>
        </div>
        <div class="card-body">
            @if (Model.Any())
            {
                <div class="table-responsive glass-table-responsive">
                    <table class="glass-table table-hover" id="specializedTrainingTable">
                        <thead>
                            <tr>
                                <th>训练名称</th>
                                <th>模块类型</th>
                                <th>总分</th>
                                <th>时长</th>
                                <th>题目数</th>
                                <th>状态</th>
                                <th>导入时间</th>
                                <th>操作</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var training in Model)
                            {
                                <tr data-module-type="@training.ModuleType" data-name="@training.Name.ToLower()">
                                    <td>
                                        <div class="d-flex align-items-center">
                                            <i class="bi bi-target text-primary me-2"></i>
                                            <div>
                                                <div class="specialized-training-name-display" data-training-id="@training.Id">
                                                    <strong class="d-inline-block" ondblclick="startEditSpecializedTrainingName(@training.Id, '@training.Name')">@training.Name</strong>
                                                    <button type="button" class="btn btn-sm btn-outline-secondary ms-2 edit-name-btn"
                                                            onclick="startEditSpecializedTrainingName(@training.Id, '@training.Name')" title="编辑专项训练名称">
                                                        <i class="bi bi-pencil"></i>
                                                    </button>
                                                </div>
                                                <div class="specialized-training-name-edit d-none" data-training-id="@training.Id">
                                                    <div class="input-group input-group-sm">
                                                        <input type="text" class="form-control specialized-training-name-input" value="@training.Name" maxlength="200">
                                                        <button type="button" class="btn btn-success btn-sm" onclick="saveSpecializedTrainingName(@training.Id)" title="保存">
                                                            <i class="bi bi-check"></i>
                                                        </button>
                                                        <button type="button" class="btn btn-secondary btn-sm" onclick="cancelEditSpecializedTrainingName(@training.Id)" title="取消">
                                                            <i class="bi bi-x"></i>
                                                        </button>
                                                    </div>
                                                    <small class="text-muted">按Enter保存，按Esc取消</small>
                                                </div>
                                                @if (!string.IsNullOrEmpty(training.Description))
                                                {
                                                    <br>
                                                    <small class="text-muted">@training.Description</small>
                                                }
                                            </div>
                                        </div>
                                    </td>
                                    <td>
                                        <span class="badge bg-info">@training.ModuleType</span>
                                    </td>
                                    <td>@training.TotalScore 分</td>
                                    <td>@training.Duration 分钟</td>
                                    <td>@training.Questions.Count</td>
                                    <td>
                                        @if (training.IsEnabled)
                                        {
                                            <span class="badge bg-success">启用</span>
                                        }
                                        else
                                        {
                                            <span class="badge bg-secondary">禁用</span>
                                        }
                                    </td>
                                    <td>
                                        <small class="text-muted">
                                            @training.ImportedAt.ToString("yyyy-MM-dd HH:mm")
                                        </small>
                                    </td>
                                    <td>
                                        <div class="btn-group btn-group-sm" role="group">
                                            <a asp-action="SpecializedTrainingDetails" asp-route-id="@training.Id"
                                               class="glass-btn glass-btn-sm glass-btn-primary" title="查看详情">
                                                <i class="bi bi-eye"></i>
                                            </a>
                                            <button type="button" class="glass-btn glass-btn-sm glass-btn-danger"
                                                    onclick="deleteSpecializedTraining(@training.Id, '@training.Name')" title="删除">
                                                <i class="bi bi-trash"></i>
                                            </button>
                                        </div>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            }
            else
            {
                <div class="glass-table-empty">
                    <i class="bi bi-inbox display-1 mb-3"></i>
                    <h5>暂无专项训练数据</h5>
                    <p class="mb-4">您还没有导入任何专项训练，点击下方按钮开始导入。</p>
                    <a asp-action="ImportSpecializedTraining" class="glass-btn glass-btn-primary">
                        <i class="bi bi-upload me-1"></i>导入专项训练
                    </a>
                </div>
            }
        </div>
    </div>
</div>

<!-- 删除确认模态框 -->
<div class="modal fade glass-modal" id="deleteModal" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">
                    <i class="bi bi-exclamation-triangle text-warning me-2"></i>确认删除
                </h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body">
                <p>确定要删除专项训练 "<span id="deleteTrainingName" class="fw-bold text-primary"></span>" 吗？</p>
                <p class="text-danger"><i class="bi bi-exclamation-triangle me-1"></i>此操作不可撤销！</p>
            </div>
            <div class="modal-footer">
                <button type="button" class="glass-btn glass-btn-secondary" data-bs-dismiss="modal">
                    <i class="bi bi-x-circle me-1"></i>取消
                </button>
                <button type="button" class="glass-btn glass-btn-danger" id="confirmDeleteBtn">
                    <i class="bi bi-trash me-1"></i>确认删除
                </button>
            </div>
        </div>
    </div>
</div>

@Html.AntiForgeryToken()

<script>
document.addEventListener('DOMContentLoaded', function() {
    const searchInput = document.getElementById('searchInput');
    const moduleTypeFilter = document.getElementById('moduleTypeFilter');
    const table = document.getElementById('specializedTrainingTable');
    
    // 搜索功能
    searchInput.addEventListener('input', filterTable);
    moduleTypeFilter.addEventListener('change', filterTable);
    
    function filterTable() {
        const searchTerm = searchInput.value.toLowerCase();
        const selectedModuleType = moduleTypeFilter.value;
        const rows = table.querySelectorAll('tbody tr');
        
        rows.forEach(row => {
            const name = row.getAttribute('data-name');
            const moduleType = row.getAttribute('data-module-type');
            
            const matchesSearch = name.includes(searchTerm);
            const matchesModuleType = !selectedModuleType || moduleType === selectedModuleType;
            
            row.style.display = matchesSearch && matchesModuleType ? '' : 'none';
        });
    }
});

let deleteTrainingId = null;

function deleteSpecializedTraining(id, name) {
    deleteTrainingId = id;
    document.getElementById('deleteTrainingName').textContent = name;
    new bootstrap.Modal(document.getElementById('deleteModal')).show();
}

document.getElementById('confirmDeleteBtn').addEventListener('click', function() {
    if (deleteTrainingId) {
        console.log('开始删除专项训练，ID:', deleteTrainingId);

        fetch('@Url.Action("DeleteSpecializedTraining")', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/x-www-form-urlencoded'
            },
            body: `id=${deleteTrainingId}`
        })
        .then(response => {
            console.log('删除请求响应状态:', response.status);
            return response.json();
        })
        .then(data => {
            console.log('删除请求响应数据:', data);
            if (data.success) {
                location.reload();
            } else {
                alert('删除失败：' + data.message);
            }
        })
        .catch(error => {
            console.error('删除请求错误:', error);
            alert('删除失败，请稍后重试');
        });

        bootstrap.Modal.getInstance(document.getElementById('deleteModal')).hide();
    }
});

// 专项训练名称编辑功能
function startEditSpecializedTrainingName(trainingId, currentName) {
        const displayElement = document.querySelector(`.specialized-training-name-display[data-training-id="${trainingId}"]`);
        const editElement = document.querySelector(`.specialized-training-name-edit[data-training-id="${trainingId}"]`);
        const inputElement = editElement.querySelector('.specialized-training-name-input');

        // 隐藏显示元素，显示编辑元素
        displayElement.classList.add('d-none');
        editElement.classList.remove('d-none');

        // 设置输入框值并聚焦
        inputElement.value = currentName;
        inputElement.focus();
        inputElement.select();

        // 绑定键盘事件
        inputElement.onkeydown = function(e) {
            if (e.key === 'Enter') {
                e.preventDefault();
                saveSpecializedTrainingName(trainingId);
            } else if (e.key === 'Escape') {
                e.preventDefault();
                cancelEditSpecializedTrainingName(trainingId);
            }
        };
    }

    function saveSpecializedTrainingName(trainingId) {
        const editElement = document.querySelector(`.specialized-training-name-edit[data-training-id="${trainingId}"]`);
        const inputElement = editElement.querySelector('.specialized-training-name-input');
        const newName = inputElement.value.trim();

        // 输入验证
        if (!newName) {
            alert('专项训练名称不能为空');
            inputElement.focus();
            return;
        }

        if (newName.length > 200) {
            alert('专项训练名称长度不能超过200个字符');
            inputElement.focus();
            return;
        }

        // 检查非法字符
        const forbiddenChars = ['<', '>', '"', "'", '&', '\\', '/', '?', '*', '|', ':', ';', '%'];
        if (forbiddenChars.some(char => newName.includes(char))) {
            alert('专项训练名称包含非法字符，请避免使用: < > " \' & \\ / ? * | : ; %');
            inputElement.focus();
            return;
        }

        // 发送AJAX请求
        fetch(`/api/specialized-training/${trainingId}/name`, {
            method: 'PUT',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify({ name: newName })
        })
        .then(response => response.json())
        .then(data => {
            if (data.success) {
                // 更新显示
                const displayElement = document.querySelector(`.specialized-training-name-display[data-training-id="${trainingId}"]`);
                const nameElement = displayElement.querySelector('strong');
                nameElement.textContent = data.updatedName;

                // 切换回显示模式
                cancelEditSpecializedTrainingName(trainingId);

                // 显示成功消息
                showMessage('专项训练名称更新成功', 'success');
            } else {
                alert('更新失败: ' + data.message);
            }
        })
        .catch(error => {
            console.error('Error:', error);
            alert('更新失败，请稍后重试');
        });
    }

    function cancelEditSpecializedTrainingName(trainingId) {
        const displayElement = document.querySelector(`.specialized-training-name-display[data-training-id="${trainingId}"]`);
        const editElement = document.querySelector(`.specialized-training-name-edit[data-training-id="${trainingId}"]`);

        // 显示原始元素，隐藏编辑元素
        displayElement.classList.remove('d-none');
        editElement.classList.add('d-none');

        // 清除键盘事件绑定
        const inputElement = editElement.querySelector('.specialized-training-name-input');
        inputElement.onkeydown = null;
    }

    function showMessage(message, type) {
        // 创建临时消息提示
        const alertDiv = document.createElement('div');
        alertDiv.className = `alert alert-${type} alert-dismissible fade show position-fixed`;
        alertDiv.style.top = '20px';
        alertDiv.style.right = '20px';
        alertDiv.style.zIndex = '9999';
        alertDiv.innerHTML = `
            ${message}
            <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
        `;
        document.body.appendChild(alertDiv);

        // 3秒后自动移除
        setTimeout(() => {
            if (alertDiv.parentNode) {
                alertDiv.parentNode.removeChild(alertDiv);
            }
        }, 3000);
    }
</script>
